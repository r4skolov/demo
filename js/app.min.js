/*! For license information please see app.min.js.LICENSE.txt */
(()=>{"use strict";const e=(()=>{const e=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'];class t{constructor({targetModal:e,triggers:t=[],onShow:o=()=>{},onClose:i=()=>{},openTrigger:n="data-micromodal-trigger",closeTrigger:s="data-micromodal-close",openClass:a="is-open",disableScroll:l=!0,disableScrollElement:r=[],disableFocus:c=!0,backFocus:d=!0,awaitCloseAnimation:h=!1,awaitOpenAnimation:g=!1,disableEsc:m=!1,debugMode:u=!1}){this.modal=document.getElementById(e),this.config={debugMode:u,disableScroll:l,disableScrollElement:r,openTrigger:n,closeTrigger:s,openClass:a,onShow:o,onClose:i,awaitCloseAnimation:h,awaitOpenAnimation:g,disableFocus:c,backFocus:d,disableEsc:m},t.length>0&&this.registerTriggers(...t),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}registerTriggers(...e){e.filter(Boolean).forEach((e=>{e.addEventListener("click",(e=>this.showModal(e)))}))}showModal(e=null){if(this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),document.querySelectorAll(".modal.is-open").forEach((e=>{e.classList.remove("is-open")})),this.modal.classList.add("is-open"),this.scrollBehaviour("disable"),this.addEventListeners(),this.config.awaitOpenAnimation){const e=()=>{this.modal.removeEventListener("animationend",e,!1),this.setFocusToFirstNode()};this.modal.addEventListener("animationend",e,!1)}else this.setFocusToFirstNode();this.config.onShow(this.modal,this.activeElement,e)}closeModal(e=null){const t=this,{modal:o}=t;if(t.modal.setAttribute("aria-hidden","true"),t.removeEventListeners(),t.activeElement&&t.activeElement.focus&&t.config.backFocus&&t.activeElement.focus(),t.config.onClose(t.modal,t.activeElement,e),this.config.awaitCloseAnimation){const{openClass:e}=t.config;this.modal.addEventListener("animationend",(function i(){o.classList.remove(e),t.scrollBehaviour("enable"),o.removeEventListener("animationend",i,!1)}),!1)}else o.classList.remove(this.config.openClass),t.scrollBehaviour("enable")}closeModalById(e){this.modal=document.getElementById(e),this.modal&&this.closeModal()}getSizeScrollbar(){return window.innerWidth-document.documentElement.clientWidth}getScrollShiftNodes(){if(!this.config.disableScrollElement.length)return!1;const e=document.querySelectorAll(this.config.disableScrollElement);return Array(...e)}scrollBehaviour(e){if(!this.config.disableScroll)return;const t=document.querySelector("body"),o=this.getScrollShiftNodes(),i=this.getSizeScrollbar();switch(e){case"enable":Object.assign(document.documentElement.style,{marginRight:"",overflow:""}),Object.assign(t.style,{overflow:""}),o&&o.forEach((e=>{Object.assign(e.style,{marginRight:""})}));break;case"disable":Object.assign(document.documentElement.style,{marginRight:`${i}px`,overflow:"hidden"}),Object.assign(t.style,{overflow:"hidden"}),o&&o.forEach((e=>{Object.assign(e.style,{marginRight:`${i}px`})}))}}addEventListeners(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),document.addEventListener("keydown",this.onKeydown)}removeEventListeners(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),document.removeEventListener("keydown",this.onKeydown)}onClick(e){(e.target.hasAttribute(this.config.closeTrigger)||e.target.parentNode.hasAttribute(this.config.closeTrigger))&&(e.preventDefault(),e.stopPropagation(),this.closeModal(e))}onKeydown(e){this.config.disableEsc||27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.retainFocus(e)}getFocusableNodes(){const t=this.modal.querySelectorAll(e);return Array(...t)}setFocusToFirstNode(){if(this.config.disableFocus)return;const e=this.getFocusableNodes();if(0===e.length)return;const t=e.filter((e=>!e.hasAttribute(this.config.closeTrigger)));t.length>0&&t[0].focus(),0===t.length&&e[0].focus()}retainFocus(e){let t=this.getFocusableNodes();if(0!==t.length)if(t=t.filter((e=>null!==e.offsetParent)),this.modal.contains(document.activeElement)){const o=t.indexOf(document.activeElement);e.shiftKey&&0===o&&(t[t.length-1].focus(),e.preventDefault()),!e.shiftKey&&t.length>0&&o===t.length-1&&(t[0].focus(),e.preventDefault())}else t[0].focus()}}let o=null;const i={},n=e=>{if(!document.getElementById(e))return console.warn(`MicroModal: ❗Seems like you have missed %c'${e}'`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;","ID somewhere in your code. Refer example below to resolve it."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",`<div class="modal" id="${e}"></div>`),!1},s=(e,t)=>{if((e=>{if(e.length<=0)console.warn("MicroModal: ❗Please specify at least one %c'micromodal-trigger'","background-color: #f8f9fa;color: #50596c;font-weight: bold;","data attribute."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<a href="#" data-micromodal-trigger="my-modal"></a>')})(e),!t)return!0;for(const e in t)n(e);return!0};return{init:e=>{const n={openTrigger:"data-micromodal-trigger",...e},a=[...document.querySelectorAll(`[${n.openTrigger}]`)],l=((e,t)=>{const o=[];return e.forEach((e=>{const i=e.attributes[t].value;void 0===o[i]&&(o[i]=[]),o[i].push(e)})),o})(a,n.openTrigger);if(!0!==n.debugMode||!1!==s(a,l))for(const e in l){const s=l[e];n.targetModal=e,n.triggers=[...s],o=new t(n),i[e]=o}},show:(e,i)=>{const s=i||{};s.targetModal=e,!0===s.debugMode&&!1===n(e)||(o&&o.removeEventListeners(),o=new t(s),o.showModal())},close:e=>{e?i[e].closeModalById(e):i[e].closeModal()}}})(),t=e;function o(){!function(){const e={openTrigger:"data-modal-open",closeTrigger:"data-modal-close",openClass:"is-open",awaitOpenAnimation:!0,awaitCloseAnimation:!0};t.init(e);const o=document.querySelector(".js-modal-close");o&&o.addEventListener("click",(o=>{o.preventDefault();const{id:i}=o.target.dataset;i&&t.close(i,e)}))}();document.querySelectorAll("input, textarea").forEach((e=>{const t=()=>{e.value?e.classList.add("active"):e.classList.remove("active")};e.addEventListener("input",t),e.addEventListener("change",t);new MutationObserver((()=>{t()})).observe(e,{attributes:!0,attributeFilter:["value"]}),t()}))}"undefined"!=typeof window&&(window.MicroModal=e),o()})();